{"version":3,"sources":["file:///Users/ADMIN/Desktop/FruitLineSaga_Cocos/FruitLineSaga/FruitLineSaga_Cocos/assets/Script/AudioController.ts"],"names":["_decorator","AudioClip","AudioSource","Button","Component","Sprite","SpriteFrame","DataGame","AudioType","ccclass","property","AudioController","type","tooltip","start","updateAudio","updateSpriteButtonSound","spriteBGM","musicStatus","spriteSFX","gameVolume","buttonBGM","node","on","EventType","CLICK","playAudio","Tick","buttonSFX","listButton","map","button","audioSource","play","stop","playOneShot","listAudioClip","spr","isOn","spriteFrame","spriteFrameOn","spriteFrameOff"],"mappings":"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","sourcesContent":["import { _decorator, AudioClip, AudioSource, Button, Component, Node, sp, Sprite, SpriteFrame } from 'cc';\r\nimport { DataGame } from './Utils/DataGame';\r\nimport { AudioType } from './Utils/DataTypes';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('AudioController')\r\nexport class AudioController extends Component {\r\n    @property({\r\n        type: AudioClip,\r\n        tooltip: 'List audio clip'\r\n    })\r\n    private listAudioClip: AudioClip[] = [];\r\n\r\n    @property({\r\n        type: AudioSource,\r\n        tooltip: 'Audio source'\r\n    })\r\n    private audioSource: AudioSource;\r\n\r\n    @property({\r\n        type: Sprite,\r\n        tooltip: 'Sprite background music'\r\n    })\r\n    private spriteBGM: Sprite;\r\n\r\n    @property({\r\n        type: Sprite,\r\n        tooltip: 'Sprite sfx'\r\n    })\r\n    private spriteSFX: Sprite;\r\n\r\n    @property({\r\n        type: SpriteFrame,\r\n        tooltip: 'Sprite frame on'\r\n    })\r\n    private spriteFrameOn: SpriteFrame;\r\n\r\n    @property({\r\n        type: SpriteFrame,\r\n        tooltip: 'Sprite frame off'\r\n    })\r\n    private spriteFrameOff: SpriteFrame;\r\n\r\n    @property({\r\n        type: Button,\r\n        tooltip: 'Button BGM'\r\n    })\r\n    private buttonBGM: Button;\r\n\r\n    @property({\r\n        type: Button,\r\n        tooltip: 'Button SFX'\r\n    })\r\n    private buttonSFX: Button;\r\n\r\n    @property({\r\n        type: Button,\r\n        tooltip: 'List button'\r\n    })\r\n    private listButton: Button[] = [];\r\n\r\n    protected start(): void {\r\n        this.updateAudio();\r\n        this.updateSpriteButtonSound(this.spriteBGM, DataGame.musicStatus);\r\n        this.updateSpriteButtonSound(this.spriteSFX, DataGame.gameVolume === 1);\r\n\r\n        this.buttonBGM.node.on(Button.EventType.CLICK, () => {\r\n            DataGame.musicStatus = !DataGame.musicStatus;\r\n            this.updateSpriteButtonSound(this.spriteBGM, DataGame.musicStatus);\r\n            this.updateAudio();\r\n            this.playAudio(AudioType.Tick);\r\n        });\r\n\r\n        this.buttonSFX.node.on(Button.EventType.CLICK, () => {\r\n            DataGame.gameVolume = DataGame.gameVolume ? 0 : 1;\r\n            this.updateSpriteButtonSound(this.spriteSFX, DataGame.gameVolume === 1);\r\n            this.playAudio(AudioType.Tick);\r\n        });\r\n\r\n        this.listButton.map((button) => {\r\n            button.node.on(Button.EventType.CLICK, () => { this.playAudio(AudioType.Button) });\r\n        })\r\n    }\r\n\r\n    public updateAudio(): void {\r\n        if (DataGame.musicStatus) this.audioSource.play();\r\n        else this.audioSource.stop();\r\n    }\r\n\r\n    public playAudio(type: AudioType): void {\r\n        this.audioSource.playOneShot(this.listAudioClip[type], DataGame.gameVolume);\r\n    }\r\n\r\n    private updateSpriteButtonSound(spr: Sprite, isOn: boolean): void {\r\n        spr.spriteFrame = isOn ? this.spriteFrameOn : this.spriteFrameOff;\r\n    }\r\n}\r\n\r\n"]}