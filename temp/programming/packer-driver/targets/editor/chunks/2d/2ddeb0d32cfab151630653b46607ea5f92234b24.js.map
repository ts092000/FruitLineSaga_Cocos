{"version":3,"sources":["file:///Users/ADMIN/Desktop/FruitLineSaga_Cocos/FruitLineSaga/FruitLineSaga_Cocos/assets/Script/PoolManager.ts"],"names":["_decorator","Component","instantiate","NodePool","Prefab","ccclass","property","PoolManager","type","tooltip","poolCell","poolExplosion","poolScore","onLoad","initPoolCell","size","cell","prefabCell","put","getCell","element","get","putCell","node","getExplosion","prefabExplosion","putExplosion","getAnimationScore","prefabAnimationScore","putAnimationScore"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAAmBC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,M,OAAAA,M;;;;;;;;;OAGvD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;6BAGjBO,W,WADZF,OAAO,CAAC,aAAD,C,UAEHC,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAEJ,MADA;AAENK,QAAAA,OAAO,EAAE;AAFH,OAAD,C,UAMRH,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAEJ,MADA;AAENK,QAAAA,OAAO,EAAE;AAFH,OAAD,C,UAMRH,QAAQ,CAACF,MAAD,C,2BAdb,MACaG,WADb,SACiCN,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAgB/BS,QAhB+B,GAgBV,IAAIP,QAAJ,EAhBU;AAAA,eAiB/BQ,aAjB+B,GAiBL,IAAIR,QAAJ,EAjBK;AAAA,eAkB/BS,SAlB+B,GAkBT,IAAIT,QAAJ,EAlBS;AAAA;;AAoB7BU,QAAAA,MAAM,GAAS;AACrB,eAAKC,YAAL;AACH;;AAEOA,QAAAA,YAAY,GAAS;AACzB,iBAAO,KAAKJ,QAAL,CAAcK,IAAd,KAAuB,GAA9B,EAAmC;AAC/B,gBAAIC,IAAI,GAAGd,WAAW,CAAC,KAAKe,UAAN,CAAtB;AACA,iBAAKP,QAAL,CAAcQ,GAAd,CAAkBF,IAAlB;AACH;AACJ;;AAEMG,QAAAA,OAAO,GAAS;AACnB,cAAIC,OAAO,GAAG,KAAKV,QAAL,CAAcK,IAAd,KAAuB,CAAvB,GAA2B,KAAKL,QAAL,CAAcW,GAAd,EAA3B,GAAiDnB,WAAW,CAAC,KAAKe,UAAN,CAA1E;AACA,iBAAOG,OAAP;AACH;;AAEME,QAAAA,OAAO,CAACC,IAAD,EAAmB;AAC7B,eAAKb,QAAL,CAAcQ,GAAd,CAAkBK,IAAlB;AACH;;AAEMC,QAAAA,YAAY,GAAS;AACxB,iBAAO,KAAKb,aAAL,CAAmBI,IAAnB,KAA4B,CAA5B,GAAgC,KAAKJ,aAAL,CAAmBU,GAAnB,EAAhC,GAA2DnB,WAAW,CAAC,KAAKuB,eAAN,CAA7E;AACH;;AAEMC,QAAAA,YAAY,CAACH,IAAD,EAAmB;AAClC,eAAKZ,aAAL,CAAmBO,GAAnB,CAAuBK,IAAvB;AACH;;AAEMI,QAAAA,iBAAiB,GAAS;AAC7B,iBAAO,KAAKf,SAAL,CAAeG,IAAf,KAAwB,CAAxB,GAA4B,KAAKH,SAAL,CAAeS,GAAf,EAA5B,GAAmDnB,WAAW,CAAC,KAAK0B,oBAAN,CAArE;AACH;;AAEMC,QAAAA,iBAAiB,CAACN,IAAD,EAAa;AACjC,eAAKX,SAAL,CAAeM,GAAf,CAAmBK,IAAnB;AACH;;AAtDsC,O","sourcesContent":["import { _decorator, Component, instantiate, Node, NodePool, Prefab, Vec3 } from 'cc';\r\nimport { Constants } from './Utils/Constants';\r\nimport { Cell } from './PrefabControl/Cell';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PoolManager')\r\nexport class PoolManager extends Component {\r\n    @property({\r\n        type: Prefab,\r\n        tooltip: 'Prefab cell'\r\n    })\r\n    private prefabCell: Prefab;\r\n\r\n    @property({\r\n        type: Prefab,\r\n        tooltip: 'Prefab explosion'\r\n    })\r\n    private prefabExplosion: Prefab;\r\n\r\n    @property(Prefab)\r\n    private prefabAnimationScore: Prefab;\r\n\r\n    private poolCell: NodePool = new NodePool();\r\n    private poolExplosion: NodePool = new NodePool();\r\n    private poolScore: NodePool = new NodePool();\r\n\r\n    protected onLoad(): void {\r\n        this.initPoolCell();\r\n    }\r\n\r\n    private initPoolCell(): void {\r\n        while (this.poolCell.size() < 100) {\r\n            let cell = instantiate(this.prefabCell);\r\n            this.poolCell.put(cell);\r\n        }\r\n    }\r\n\r\n    public getCell(): Node {\r\n        let element = this.poolCell.size() > 0 ? this.poolCell.get() : instantiate(this.prefabCell);\r\n        return element;\r\n    }\r\n\r\n    public putCell(node: Node): void {\r\n        this.poolCell.put(node);\r\n    }\r\n\r\n    public getExplosion(): Node {\r\n        return this.poolExplosion.size() > 0 ? this.poolExplosion.get() : instantiate(this.prefabExplosion);\r\n    }\r\n\r\n    public putExplosion(node: Node): void {\r\n        this.poolExplosion.put(node);\r\n    }\r\n\r\n    public getAnimationScore(): Node {\r\n        return this.poolScore.size() > 0 ? this.poolScore.get() : instantiate(this.prefabAnimationScore);\r\n    }\r\n\r\n    public putAnimationScore(node: Node) {\r\n        this.poolScore.put(node);\r\n    }\r\n\r\n\r\n}\r\n\r\n"]}